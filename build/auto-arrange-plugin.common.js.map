{"version":3,"file":"auto-arrange-plugin.common.js","sources":["../src/auto-arrange.js","../src/index.js"],"sourcesContent":["export class AutoArrange {\r\n  constructor(editor, margin, depth) {\r\n    this.editor = editor;\r\n    this.margin = margin;\r\n    this.depth = depth;\r\n  }\r\n\r\n  getNodes(node, type = 'output') {\r\n    const nodes = [];\r\n    const key = `${type}s`;\r\n\r\n    for (let io of node[key].values())\r\n      for (let connection of io.connections.values())\r\n        nodes.push(connection[type === 'input' ? 'output' : 'input'].node);\r\n\r\n    return nodes;\r\n  }\r\n\r\n  getNodesTable(node, cols = [], depth = 0) {\r\n    if (this.depth && depth > this.depth) return;\r\n    if (!cols[depth]) cols[depth] = [];\r\n    if (cols[depth].includes(node)) return;\r\n\r\n    cols[depth].push(node);\r\n\r\n    this.getNodes(node, 'output').map(n =>\r\n      this.getNodesTable(n, cols, depth + 1)\r\n    );\r\n    this.getNodes(node, 'input').map(n =>\r\n      this.getNodesTable(n, cols, depth - 1)\r\n    );\r\n\r\n    return cols;\r\n  }\r\n\r\n  nodeSize(node) {\r\n    const el = this.editor.view.nodes.get(node).el;\r\n\r\n    return {\r\n      width: el.clientWidth,\r\n      height: el.clientHeight\r\n    };\r\n  }\r\n\r\n  arrange(node = this.editor.nodes[0]) {\r\n    var completePaths = [...this.editor.nodes];\r\n\r\n    console.log('Todos los nodos');\r\n    console.log(completePaths);\r\n\r\n    var counter = 0;\r\n    var maximumHeight = 0;\r\n    var heightOffset = 0;\r\n    while (completePaths.length > 0) {\r\n      counter = counter + 1;\r\n      console.log('Camino: ' + counter);\r\n      const table = this.getNodesTable(completePaths[0]);\r\n      // completePaths = completePaths.filter(x => !table[0].includes(x));\r\n\r\n\r\n      for (let individualTable of table) {\r\n        for (let node of individualTable) {\r\n          var counterNumber = 0;\r\n          for (let nodes of completePaths) {\r\n            if (node == nodes) {\r\n              completePaths.splice(counterNumber, 1);\r\n            }\r\n            counterNumber++;\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n\r\n      console.log('Los nodos que conforman el camino:');\r\n      console.log(table);\r\n      console.log('Los caminos despues de filtrar');\r\n      console.log(completePaths);\r\n\r\n      const normalized = Object.keys(table)\r\n        .sort((i1, i2) => +i1 - +i2)\r\n        .map(key => table[key]);\r\n      const widths = normalized.map(col =>\r\n        Math.max(...col.map(n => this.nodeSize(n).width))\r\n      );\r\n\r\n      let x = 0;\r\n\r\n\r\n\r\n      for (let [i, col] of Object.entries(normalized)) {\r\n        const heights = col.map(n => this.nodeSize(n).height);\r\n        const fullHeight = heights.reduce((a, b) => a + b + this.margin.y);\r\n\r\n        let y = 0;\r\n\r\n        x += widths[i] + this.margin.x;\r\n        console.log('Alturas');\r\n\r\n        for (let [j, n] of Object.entries(col)) {\r\n          if (j == 0) {\r\n            y += heights[j] + this.margin.y + heightOffset;\r\n          } else {\r\n            y += heights[j] + this.margin.y ;\r\n          }\r\n         \r\n          maximumHeight = Math.max(maximumHeight, y);\r\n\r\n          console.log(y);\r\n\r\n          // this.editor.view.nodes.get(n).translate(x, y - fullHeight / 2);\r\n          this.editor.view.nodes.get(n).translate(x, y );\r\n          this.editor.view.updateConnections({ node: n });\r\n        }\r\n\r\n\r\n\r\n      }\r\n\r\n      console.log('Maxima altura')\r\n      heightOffset = maximumHeight + 50;\r\n      console.log(maximumHeight);\r\n      console.log (heightOffset);\r\n    }\r\n\r\n    console.log(this.editor.nodes);\r\n\r\n    console.log('Salgo');\r\n  }\r\n}\r\n","import { AutoArrange } from './auto-arrange';\r\n\r\nfunction install(editor, { margin = { x: 50, y: 50 }, depth = null }) {\r\n    editor.bind('arrange');\r\n\r\n    const ar = new AutoArrange(editor, margin, depth);\r\n    \r\n    editor.on('arrange', ({ node }) => ar.arrange(node));\r\n\r\n    editor.arrange = node => {\r\n        console.log(`Deprecated: use editor.trigger('arrange', { node }) instead`);\r\n        ar.arrange(node);\r\n    }\r\n}\r\n\r\nexport default {\r\n    name: 'auto-arrange',\r\n    install\r\n}"],"names":["AutoArrange","editor","margin","depth","node","type","nodes","key","values","io","connections","connection","push","cols","includes","getNodes","map","n","getNodesTable","el","view","get","width","clientWidth","height","clientHeight","completePaths","console","log","counter","maximumHeight","heightOffset","table","individualTable","counterNumber","splice","normalized","Object","keys","sort","i1","i2","widths","col","Math","max","nodeSize","x","entries","i","heights","fullHeight","reduce","a","b","y","j","translate","updateConnections","length","install","bind","ar","on","arrange","name"],"mappings":"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"}